server:
  port: 8085

spring:
  application:
    name: api-gateway
    
  redis:
   host: localhost
   port: 6379
  
  cloud:
    gateway:
      default-filters:
        - AddRequestHeader=traceparent, {request.headers.traceparent}
        - AddRequestHeader=baggage, {request.headers.baggage}
      routes:
        - id: user-service
          uri: lb://user-service
          predicates:
            - Path=/users/**
          filters:
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 5   # tokens per second
                redis-rate-limiter.burstCapacity: 10  # max bucket size
            - name: CircuitBreaker
              args:
                name: userServiceCircuitBreaker
                fallbackUri: forward:/fallback/users
        - id: order-service
          uri: lb://order-service
          predicates:
            - Path=/orders/**
          filters:
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 5   # tokens per second
                redis-rate-limiter.burstCapacity: 10  # max bucket size
            - name: CircuitBreaker
              args:
                name: orderServiceCircuitBreaker
                fallbackUri: forward:/fallback/orders
    discovery:
      locator:
        enabled: true  # Optional: auto-route based on service names
        lower-case-service-id: true

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka
    register-with-eureka: true
    fetch-registry: true
  instance:
    prefer-ip-address: true
    lease-renewal-interval-in-seconds: 5
    lease-expiration-duration-in-seconds: 10

management:
  endpoints:
    web:
      exposure:
        include: '*'